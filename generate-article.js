import axios from "axios";
import { GoogleGenerativeAI } from "@google/generative-ai";
import fs from "fs";

// üîë —Ç–≤–æ–π API-–∫–ª—é—á
const API_KEY = "AIzaSyCQF6mSwIyl3AUzfTVmJfN8kbOZvd8jsX0";
const genAI = new GoogleGenerativeAI(API_KEY);

// üïë –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (morning –∏–ª–∏ evening)
const timeOfDay = process.argv[2] || "morning";

async function getWeatherData() {
  const url = "https://api.open-meteo.com/v1/forecast";
  const params = {
    latitude: 56.95,
    longitude: 24.1,
    daily:
      "temperature_2m_max,temperature_2m_min,precipitation_probability_max,windspeed_10m_max",
    timezone: "Europe/Riga",
  };

  const response = await axios.get(url, { params });
  return response.data.daily;
}

async function generateArticle(weatherData, timeOfDay) {
  const prompt = `
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥-–∂—É—Ä–Ω–∞–ª–∏—Å—Ç –∏ –ø–∏—à–µ—à—å –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –±–ª–æ–≥–∞ –æ –ø–æ–≥–æ–¥–µ –≤ –†–∏–≥–µ. 
–ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–µ—Ä—Å–∏—é –¥–ª—è: ${timeOfDay === "morning" ? "–£–¢–†–ê" : "–í–ï–ß–ï–†–ê"}.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ–∫—Å—Ç–∞:
1. –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ ‚Äî –¥—Ä—É–∂–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è ${timeOfDay}).
2. –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —á–∞—Å–æ–≤ (—Ü–∏–∫–ª–æ–Ω, –∞–Ω—Ç–∏—Ü–∏–∫–ª–æ–Ω, —Ñ—Ä–æ–Ω—Ç—ã).
3. –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞:
   - –£—Ç—Ä–æ–º: –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –æ—Å–∞–¥–∫–∏, –≤–µ—Ç–µ—Ä, –¥–∞–≤–ª–µ–Ω–∏–µ).
   - –í–µ—á–µ—Ä–æ–º: –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–æ—á—å –∏ —É—Ç—Ä–æ.
4. –ü—Ä–æ—Å—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ).
5. –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∂–∏–∑–Ω—å (—Å–æ–≤–µ—Ç—ã).
6. –§–∏–Ω–∞–ª ‚Äî –ª—ë–≥–∫–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ (—É—Ç—Ä–æ–º ‚Äî —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è, –≤–µ—á–µ—Ä–æ–º ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏).

–í–æ—Ç —Å–∏–Ω–æ–ø—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ:
- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –¥–Ω—è–º: ${weatherData.temperature_2m_min
    .map((t, i) => `${t}¬∞C...${weatherData.temperature_2m_max[i]}¬∞C`)
    .join(", ")}
- –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: ${weatherData.precipitation_probability_max.join("%, ")}%
- –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${weatherData.windspeed_10m_max.join(" –º/—Å, ")} –º/—Å
`;

  const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });
  const result = await model.generateContent(prompt);
  return result.response.text();
}

function saveArticle(articleText, timeOfDay) {
  const now = new Date();

  const fileDate = now.toISOString().split("T")[0]; // YYYY-MM-DD
  const displayDate = now.toLocaleDateString("ru-RU", {
    day: "numeric",
    month: "long",
    year: "numeric",
  });

  const articleJson = {
    title:
      articleText.split("\n")[0].replace(/[#*]/g, "").trim() ||
      "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –†–∏–≥–µ",
    date: displayDate,
    time: timeOfDay,
    content: articleText,
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª
  const fileName = `article-${fileDate}-${timeOfDay}.json`;
  fs.writeFileSync(fileName, JSON.stringify(articleJson, null, 2), "utf-8");

  // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º latest-article.json –¥–ª—è —Å–∞–π—Ç–∞
  fs.writeFileSync(
    "latest-article.json",
    JSON.stringify(articleJson, null, 2),
    "utf-8"
  );

  console.log(`‚úÖ –°—Ç–∞—Ç—å—è (${timeOfDay}) —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ ${fileName} –∏ latest-article.json`);
}

(async () => {
  try {
    const weather = await getWeatherData();
    const article = await generateArticle(weather, timeOfDay);
    console.log("=== –°—Ç–∞—Ç—å—è –¥–ª—è –±–ª–æ–≥–∞ ===\n");
    console.log(article);
    saveArticle(article, timeOfDay);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
  }
})();
