import axios from "axios";
import { GoogleGenerativeAI } from "@google/generative-ai";
import fs from "fs";

// 1. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ë–µ—Ä—ë–º API-–∫–ª—é—á –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ GitHub.
const API_KEY = process.env.GEMINI_API_KEY;

if (!API_KEY) {
  console.error("–û—à–∏–±–∫–∞: –°–µ–∫—Ä–µ—Ç GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ GitHub Secrets.");
  process.exit(1);
}

const genAI = new GoogleGenerativeAI(API_KEY);
const timeOfDay = process.argv[2] || "morning";

// --- –ù–û–í–û–ï: –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• ---
async function getHistoricalRecord(date) {
    try {
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const url = `https://archive-api.open-meteo.com/v1/archive?latitude=56.95&longitude=24.1&start_date=1940-${month}-${day}&end_date=${date.getFullYear() - 1}-${month}-${day}&daily=temperature_2m_max,temperature_2m_min`;
        
        const response = await axios.get(url);
        const data = response.data.daily;
        
        if (!data || !data.time || data.time.length === 0) {
            return "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.";
        }

        const records = data.time.map((t, i) => ({
            year: new Date(t).getFullYear(),
            max: data.temperature_2m_max[i],
            min: data.temperature_2m_min[i],
        })).filter(r => r.max !== null && r.min !== null);

        if (records.length === 0) {
            return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.";
        }

        const recordMax = records.reduce((prev, current) => (prev.max > current.max) ? prev : current);
        const recordMin = records.reduce((prev, current) => (prev.min < current.min) ? prev : current);

        return `–°–∞–º—ã–π —Ç–µ–ø–ª—ã–π –¥–µ–Ω—å (${recordMax.year} –≥–æ–¥): ${recordMax.max}¬∞C. –°–∞–º—ã–π —Ö–æ–ª–æ–¥–Ω—ã–π (${recordMin.year} –≥–æ–¥): ${recordMin.min}¬∞C.`;
    } catch (error) {
        console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ:", error.message);
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.";
    }
}


async function getWeatherData() {
  const url = "https://api.open-meteo.com/v1/forecast";
  const params = {
    latitude: 56.95,
    longitude: 24.1,
    daily: "temperature_2m_max,temperature_2m_min,precipitation_probability_max,windspeed_10m_max",
    timezone: "Europe/Riga",
    forecast_days: 7,
  };

  try {
    const response = await axios.get(url, { params });
    return response.data.daily;
  } catch (error) {
    console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ:", error.message);
    throw new Error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.");
  }
}

async function generateArticle(weatherData, timeOfDay) {
  // --- –ù–û–í–û–ï: –ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–¢ –ò –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• ---
  const today = new Date();
  const dateOptions = { day: 'numeric', month: 'long', timeZone: 'Europe/Riga' };
  const dates = weatherData.time.map((_, i) => {
      const date = new Date(today);
      date.setDate(today.getDate() + i);
      let prefix = "";
      if (i === 0) prefix = "–°–µ–≥–æ–¥–Ω—è, ";
      if (i === 1) prefix = "–ó–∞–≤—Ç—Ä–∞, ";
      if (i > 1) {
          const weekdayOptions = { weekday: 'long', timeZone: 'Europe/Riga' };
          prefix = `–í ${new Intl.DateTimeFormat('ru-RU', weekdayOptions).format(date)}, `;
      }
      return prefix + new Intl.DateTimeFormat('ru-RU', dateOptions).format(date);
  });
  
  const historicalRecord = await getHistoricalRecord(today);

  // --- –ù–û–í–û–ï: –í–ê–® –£–õ–£–ß–®–ï–ù–ù–´–ô –ü–†–û–ú–ü–¢ ---
  const prompt = `
–¢–≤–æ—è —Ä–æ–ª—å: –û–ø—ã—Ç–Ω—ã–π –∏ —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–¥—ë—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –±–ª–æ–≥ –æ –ø–æ–≥–æ–¥–µ –≤ –†–∏–≥–µ. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî –ª—ë–≥–∫–∏–π, –æ–±—Ä–∞–∑–Ω—ã–π –∏ –Ω–µ–º–Ω–æ–≥–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–π. –¢—ã –æ–±—ä—è—Å–Ω—è–µ—à—å —Å–ª–æ–∂–Ω—ã–µ –≤–µ—â–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É—è —è—Ä–∫–∏–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å–∏–Ω–æ–ø—Ç–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä –¥–ª—è —á–∏—Ç–∞—Ç–µ–ª–µ–π –±–ª–æ–≥–∞. –°–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å ${timeOfDay} –≤—ã–ø—É—Å–∫.

–°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ö –í–´–ü–û–õ–ù–ï–ù–ò–Æ):
1. –ù–ò–ö–ê–ö–û–ì–û MARKDOWN: –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—ã ##, **, * –∏–ª–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ. –¢–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç.
2. –¢–û–õ–¨–ö–û –†–ï–ê–õ–¨–ù–´–ï –î–ê–¢–´: –í–º–µ—Å—Ç–æ "1-–π –¥–µ–Ω—å", "2-–π –¥–µ–Ω—å" –∏—Å–ø–æ–ª—å–∑—É–π –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–∞—Ç—ã.
3. –ë–ï–ó –î–í–û–ï–¢–û–ß–ò–ô –í –ó–ê–ì–û–õ–û–í–ö–ê–•: –í –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö —Ç–∏–ø–∞ "–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑" –Ω–µ —Å—Ç–∞–≤—å –¥–≤–æ–µ—Ç–æ—á–∏–µ –≤ –∫–æ–Ω—Ü–µ.

–°–¢–†–£–ö–¢–£–†–ê –°–¢–ê–¢–¨–ò:

–ó–∞–≥–æ–ª–æ–≤–æ–∫: –ü—Ä–∏–¥—É–º–∞–π —è—Ä–∫–∏–π –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ—Ç—Ä–∞–∂–∞—é—â–∏–π —Å—É—Ç—å –ø–æ–≥–æ–¥—ã.

–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ: –î—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ (${timeOfDay}). –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.

–°–∏–Ω–æ–ø—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ "—Å –≤—ã—Å–æ—Ç—ã –ø—Ç–∏—á—å–µ–≥–æ –ø–æ–ª—ë—Ç–∞": –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –º–µ—Ç–µ–æ–∫–∞—Ä—Ç–µ. –£–∫–∞–∂–∏, –∫–∞–∫–æ–π –±–∞—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≥–æ–¥—É, –µ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –∏ –¥–≤–∏–∂–µ–Ω–∏–µ. –†–∞—Å—Å–∫–∞–∂–∏ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö —Ñ—Ä–æ–Ω—Ç–æ–≤ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –†–∏–≥—É. –£—á–∏—Ç—ã–≤–∞–π —Ç–∞–∫–∂–µ –≤–ª–∞–∂–Ω–æ—Å—Ç—å, –æ–±–ª–∞—á–Ω–æ—Å—Ç—å, –¥–≤–∏–∂–µ–Ω–∏–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –º–∞—Å—Å –∏ –≤–ª–∏—è–Ω–∏–µ –ë–∞–ª—Ç–∏–π—Å–∫–æ–≥–æ –º–æ—Ä—è.

–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ –¥–Ω—è–º:
${dates[0]} ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ —É—Ç—Ä–æ, –¥–µ–Ω—å, –≤–µ—á–µ—Ä, –Ω–æ—á—å: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –æ—Å–∞–¥–∫–∏, –≤–µ—Ç–µ—Ä.
${dates[1]} ‚Äî –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.
–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2‚Äì3 –¥–Ω—è –≤–ø–µ—Ä—ë–¥ ‚Äî –∫—Ä–∞—Ç–∫–æ, —Å –¥–∞—Ç–∞–º–∏ ${dates[2]} –∏ ${dates[3]}.

–ü–æ—á–µ–º—É —Ç–∞–∫, –∞ –Ω–µ –∏–Ω–∞—á–µ: –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–∑–∏–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º —Å –º–µ—Ç–∞—Ñ–æ—Ä–∞–º–∏.

–°–æ–≤–µ—Ç –æ—Ç –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∞: –û–¥–∏–Ω-–¥–≤–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥–Ω–æ–∑–∞.

–ú–∏–Ω–∏-—Ä—É–±—Ä–∏–∫–∞ ‚Äú–ê –≤—ã –∑–Ω–∞–ª–∏, —á—Ç–æ‚Ä¶‚Äù: –õ—é–±–æ–ø—ã—Ç–Ω—ã–π —Ñ–∞–∫—Ç –∏–∑ –º–∏—Ä–∞ –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏–∏.

–ú–∏–Ω–∏-—Ä—É–±—Ä–∏–∫–∞ ‚Äú–°–µ–≥–æ–¥–Ω—è –≤ –∏—Å—Ç–æ—Ä–∏–∏‚Äù: ${historicalRecord}.

–ú–∏–Ω–∏-—Ä—É–±—Ä–∏–∫–∞ ‚Äú–ü—Ä–∏–º–µ—Ç–∞ –¥–Ω—è‚Äù: –ù–∞—Ä–æ–¥–Ω–∞—è –ø—Ä–∏–º–µ—Ç–∞ –æ –ø–æ–≥–æ–¥–µ —Å –Ω–∞—É—á–Ω—ã–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º.

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ: –ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –∏–ª–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º —á–∏—Ç–∞—Ç–µ–ª—è–º.

–ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –¢–í–û–ï–ì–û –ê–ù–ê–õ–ò–ó–ê:
- –î–∏–∞–ø–∞–∑–æ–Ω —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä (–º–∏–Ω/–º–∞–∫—Å) –Ω–∞ 7 –¥–Ω–µ–π: ${weatherData.temperature_2m_min.map((t, i) => `${dates[i]}: ${t}¬∞C...${weatherData.temperature_2m_max[i]}¬∞C`).join("; ")}
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤ –Ω–∞ 7 –¥–Ω–µ–π: ${weatherData.precipitation_probability_max.map((p, i) => `${dates[i]}: ${p}%`).join("; ")}
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –Ω–∞ 7 –¥–Ω–µ–π: ${weatherData.windspeed_10m_max.map((w, i) => `${dates[i]}: ${w} –º/—Å`).join("; ")}
`;

  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-latest" });
  
  try {
    const result = await model.generateContent(prompt);
    return result.response.text();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏ –º–æ–¥–µ–ª—å—é Gemini:", error.message);
    throw new Error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞.");
  }
}

function saveArticle(articleText, timeOfDay) {
  const now = new Date();
  const fileDate = now.toISOString().split("T")[0];
  const displayDate = now.toLocaleDateString("ru-RU", {
    day: "numeric",
    month: "long",
    year: "numeric",
    timeZone: "Europe/Riga"
  });

  const articleJson = {
    title:
      articleText.split("\n")[0].replace(/[#*]/g, "").trim() ||
      "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –†–∏–≥–µ",
    date: displayDate,
    time: timeOfDay,
    content: articleText,
  };

  const archiveFileName = `article-${fileDate}-${timeOfDay}.json`;
  fs.writeFileSync(archiveFileName, JSON.stringify(articleJson, null, 2), "utf-8");

  fs.writeFileSync(
    "latest-article.json",
    JSON.stringify(articleJson, null, 2),
    "utf-8"
  );

  console.log(`‚úÖ –°—Ç–∞—Ç—å—è (${timeOfDay}) —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ ${archiveFileName} –∏ latest-article.json`);
}

(async () => {
  console.log(`üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏ (${timeOfDay})...`);
  try {
    const weather = await getWeatherData();
    console.log("üìä –î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –ø–æ–ª—É—á–µ–Ω—ã.");
    
    const article = await generateArticle(weather, timeOfDay);
    console.log("‚úçÔ∏è –°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –º–æ–¥–µ–ª—å—é Gemini.");
    
    console.log("\n=== –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è ===\n");
    console.log(article);
    console.log("\n============================\n");
    
    saveArticle(article, timeOfDay);
  } catch (error) {
    console.error("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error.message);
    process.exit(1);
  }
})();
